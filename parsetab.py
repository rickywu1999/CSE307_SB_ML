
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftORELSEleftANDALSOleftNOTleftEQNEQLTLTEGTGTErightAPPENDleftINleftPLUSMINUSleftTIMESDIVIDEDIVMODrightEXPONENTleftLBRACKETRBRACKETPOUNDleftLPARENRPARENANDALSO APPEND COMMA DIV DIVIDE ELSE EMPTYLIST EMPTYTUPLE EQ EQUAL EXPONENT FALSE FUN GT GTE IF IN LBRACKET LCURLY LPAREN LT LTE MINUS MOD NEQ NOT NUMBER ORELSE PLUS POUND PRINT RBRACKET RCURLY RPAREN SEMICOLON STRING TIMES TRUE VARIABLE WHILEall_lines : functionlist main_lines\n    all_lines : main_lines\n    functionlist : functionlist function\n    functionlist : function\n    function : FUN VARIABLE LPAREN list RPAREN EQUAL bigblock expression SEMICOLON\n    function : FUN VARIABLE EMPTYTUPLE EQUAL bigblock expression SEMICOLON\n    call_fun : VARIABLE LPAREN list RPAREN\n    call_fun : VARIABLE EMPTYTUPLE\n    main_lines : bigblock\n    bigblock : LCURLY block RCURLY\n     bigblock : LCURLY RCURLY\n    block : block statement\n    block : statement\n    assignment : VARIABLE EQUAL expression SEMICOLON\n    assignment : VARIABLE biglist EQUAL expression SEMICOLON\n    if_else_statement : IF LPAREN expression RPAREN bigblock ELSE bigblock\n    if_statement : IF LPAREN expression RPAREN bigblock\n    while_statement : WHILE LPAREN expression RPAREN bigblock\n    statement : assignment\n                 | print_smt\n                 | if_statement\n                 | if_else_statement\n                 | while_statement\n                 | bigblock\n                 | call_fun SEMICOLON\n    \n    print_smt : PRINT LPAREN expression RPAREN SEMICOLON\n    expression : LPAREN expression RPAREN\n    poundexp : POUND expression\n    expression : poundexp bigtuple\n    expression : poundexp LPAREN expression RPAREN\n    bigtuple : LPAREN bigtuple RPAREN\n    bigtuple : EMPTYTUPLE\n    bigtuple : LPAREN tuple RPAREN\n    tuple : expression COMMA expression\n    tuple : tuple COMMA expression\n    expression : expression biglist\n    biglist : LBRACKET list RBRACKET\n    biglist : EMPTYLIST\t\t\n    list : expression\n    list : list COMMA expression\n    expression : NOT expression\n    expression : expression PLUS expression\n                  | expression MINUS expression\n                  | expression TIMES expression\n                  | expression DIVIDE expression\n                  | expression EXPONENT expression\n                  | expression DIV expression\n                  | expression MOD expression\n                  | expression LT expression\n                  | expression LTE expression\n                  | expression GT expression\n                  | expression GTE expression\n                  | expression EQ expression\n                  | expression NEQ expression\n                  | expression ANDALSO expression\n                  | expression ORELSE expression\n                  | expression APPEND expression\n                  | expression IN expression\n    expression : factorunary : MINUS expression\n    factor : NUMBER\n              | STRING\n              | TRUE\n              | FALSE\n              | biglist\n              | bigtuple\n              | unary\n              | VARIABLE\n              | call_fun\n    '
    
_lr_action_items = {'FUN':([0,2,4,9,135,139,],[6,6,-4,-3,-6,-5,]),'LCURLY':([0,2,4,7,9,11,12,13,14,15,16,17,18,19,27,28,29,57,94,99,100,106,127,128,129,130,135,136,138,139,],[7,7,-4,7,-3,7,-11,-13,-19,-20,-21,-22,-23,-24,-10,-12,-25,7,-14,7,7,7,-15,-26,-17,-18,-6,7,-16,-5,]),'$end':([1,3,5,8,12,27,],[0,-2,-9,-1,-11,-10,]),'VARIABLE':([6,7,11,12,13,14,15,16,17,18,19,25,27,28,29,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,94,102,105,127,128,129,130,133,138,],[10,21,21,-11,-13,-19,-20,-21,-22,-23,-24,39,-10,-12,-25,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-14,39,39,-15,-26,-17,-18,39,-16,]),'RCURLY':([7,11,12,13,14,15,16,17,18,19,27,28,29,94,127,128,129,130,138,],[12,27,-11,-13,-19,-20,-21,-22,-23,-24,-10,-12,-25,-14,-15,-26,-17,-18,-16,]),'PRINT':([7,11,12,13,14,15,16,17,18,19,27,28,29,94,127,128,129,130,138,],[22,22,-11,-13,-19,-20,-21,-22,-23,-24,-10,-12,-25,-14,-15,-26,-17,-18,-16,]),'IF':([7,11,12,13,14,15,16,17,18,19,27,28,29,94,127,128,129,130,138,],[23,23,-11,-13,-19,-20,-21,-22,-23,-24,-10,-12,-25,-14,-15,-26,-17,-18,-16,]),'WHILE':([7,11,12,13,14,15,16,17,18,19,27,28,29,94,127,128,129,130,138,],[24,24,-11,-13,-19,-20,-21,-22,-23,-24,-10,-12,-25,-14,-15,-26,-17,-18,-16,]),'LPAREN':([10,12,21,22,23,24,25,27,30,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,97,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,133,134,],[25,-11,32,36,37,38,40,-10,40,40,-8,40,-38,40,40,40,32,40,89,-66,-65,40,40,-59,40,-61,-62,-63,-64,-67,-69,-32,40,40,-36,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-29,40,-41,-60,-28,40,-7,-37,-27,40,-31,-33,40,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,40,-30,]),'EMPTYTUPLE':([10,12,21,25,27,30,32,33,34,35,36,37,38,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,56,59,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,96,97,101,102,103,104,105,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,133,134,],[26,-11,33,56,-10,56,56,-8,56,-38,56,56,56,33,56,56,-66,-65,56,56,-59,56,-61,-62,-63,-64,-67,-69,-32,56,56,-36,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,-29,56,-41,-60,-28,56,-7,-37,-27,56,-31,-33,56,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,56,-30,]),'NOT':([12,25,27,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[-11,46,-10,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'POUND':([12,25,27,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[-11,49,-10,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'NUMBER':([12,25,27,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[-11,50,-10,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'STRING':([12,25,27,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[-11,51,-10,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'TRUE':([12,25,27,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[-11,52,-10,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'FALSE':([12,25,27,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[-11,53,-10,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'LBRACKET':([12,21,25,27,30,32,33,34,35,36,37,38,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,133,134,137,],[-11,34,34,-10,34,34,-8,34,-38,34,34,34,-68,34,34,-66,-65,34,34,-59,34,-61,-62,-63,-64,-67,-69,-32,34,34,34,34,34,34,-66,34,-36,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-29,34,34,34,34,34,34,-7,-37,-27,34,-31,-33,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-30,34,]),'EMPTYLIST':([12,21,25,27,30,32,33,34,35,36,37,38,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,133,134,137,],[-11,35,35,-10,35,35,-8,35,-38,35,35,35,-68,35,35,-66,-65,35,35,-59,35,-61,-62,-63,-64,-67,-69,-32,35,35,35,35,35,35,-66,35,-36,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-29,35,-41,-60,35,35,35,-7,-37,-27,35,-31,-33,35,35,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,35,35,35,35,35,-30,35,]),'MINUS':([12,25,27,30,32,33,34,35,36,37,38,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,56,58,59,62,63,64,65,66,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,95,96,97,101,102,103,104,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,133,134,137,],[-11,47,-10,47,47,-8,47,-38,47,47,47,-68,47,72,-66,-65,47,47,-59,47,-61,-62,-63,-64,-67,-69,-32,72,47,72,72,72,72,-66,47,-36,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-29,47,72,-60,72,47,72,-7,-37,-27,47,-31,-33,47,72,-42,-43,-44,-45,-46,-47,-48,72,72,72,72,72,72,72,72,72,72,72,72,72,72,47,-30,72,]),'ELSE':([12,27,129,],[-11,-10,136,]),'SEMICOLON':([20,33,35,39,44,45,48,50,51,52,53,54,55,56,58,70,88,90,91,95,96,97,98,101,103,104,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,134,137,],[29,-8,-38,-68,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,94,-36,-29,-41,-60,127,-7,-37,128,-27,-31,-33,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,135,-30,139,]),'EQUAL':([21,26,31,35,68,97,],[30,57,59,-38,106,-37,]),'PLUS':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,71,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,71,71,71,71,71,-66,-36,-29,71,-60,71,71,-7,-37,-27,-31,-33,71,-42,-43,-44,-45,-46,-47,-48,71,71,71,71,71,71,71,71,71,71,71,71,71,71,-30,71,]),'TIMES':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,73,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,73,73,73,73,73,-66,-36,-29,73,73,73,73,-7,-37,-27,-31,-33,73,73,73,-44,-45,-46,-47,-48,73,73,73,73,73,73,73,73,73,73,73,73,73,73,-30,73,]),'DIVIDE':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,74,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,74,74,74,74,74,-66,-36,-29,74,74,74,74,-7,-37,-27,-31,-33,74,74,74,-44,-45,-46,-47,-48,74,74,74,74,74,74,74,74,74,74,74,74,74,74,-30,74,]),'EXPONENT':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,75,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,75,75,75,75,75,-66,-36,-29,75,75,75,75,-7,-37,-27,-31,-33,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,75,-30,75,]),'DIV':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,76,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,76,76,76,76,76,-66,-36,-29,76,76,76,76,-7,-37,-27,-31,-33,76,76,76,-44,-45,-46,-47,-48,76,76,76,76,76,76,76,76,76,76,76,76,76,76,-30,76,]),'MOD':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,77,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,77,77,77,77,77,-66,-36,-29,77,77,77,77,-7,-37,-27,-31,-33,77,77,77,-44,-45,-46,-47,-48,77,77,77,77,77,77,77,77,77,77,77,77,77,77,-30,77,]),'LT':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,78,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,78,78,78,78,78,-66,-36,-29,78,-60,78,78,-7,-37,-27,-31,-33,78,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,78,78,-57,-58,78,78,78,78,-30,78,]),'LTE':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,79,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,79,79,79,79,79,-66,-36,-29,79,-60,79,79,-7,-37,-27,-31,-33,79,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,79,79,-57,-58,79,79,79,79,-30,79,]),'GT':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,80,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,80,80,80,80,80,-66,-36,-29,80,-60,80,80,-7,-37,-27,-31,-33,80,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,80,80,-57,-58,80,80,80,80,-30,80,]),'GTE':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,81,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,81,81,81,81,81,-66,-36,-29,81,-60,81,81,-7,-37,-27,-31,-33,81,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,81,81,-57,-58,81,81,81,81,-30,81,]),'EQ':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,82,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,82,82,82,82,82,-66,-36,-29,82,-60,82,82,-7,-37,-27,-31,-33,82,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,82,82,-57,-58,82,82,82,82,-30,82,]),'NEQ':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,83,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,83,83,83,83,83,-66,-36,-29,83,-60,83,83,-7,-37,-27,-31,-33,83,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,83,83,-57,-58,83,83,83,83,-30,83,]),'ANDALSO':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,84,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,84,84,84,84,84,-66,-36,-29,-41,-60,84,84,-7,-37,-27,-31,-33,84,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,84,-57,-58,84,84,84,84,-30,84,]),'ORELSE':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,85,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,85,85,85,85,85,-66,-36,-29,-41,-60,85,85,-7,-37,-27,-31,-33,85,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,85,85,85,85,-30,85,]),'APPEND':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,86,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,86,86,86,86,86,-66,-36,-29,86,-60,86,86,-7,-37,-27,-31,-33,86,-42,-43,-44,-45,-46,-47,-48,86,86,86,86,86,86,86,86,86,-58,86,86,86,86,-30,86,]),'IN':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,58,62,63,64,65,66,70,88,90,91,92,95,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,134,137,],[-8,-38,-68,87,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,87,87,87,87,87,-66,-36,-29,87,-60,87,87,-7,-37,-27,-31,-33,87,-42,-43,-44,-45,-46,-47,-48,87,87,87,87,87,87,87,87,87,-58,87,87,87,87,-30,87,]),'RPAREN':([33,35,39,41,42,44,45,48,50,51,52,53,54,55,56,60,62,63,64,65,66,67,70,88,90,91,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,131,132,134,],[-8,-38,-68,68,-39,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,96,98,99,100,101,103,104,-36,-29,-41,-60,-7,-37,-27,-31,-33,-40,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,134,-34,-35,-30,]),'COMMA':([33,35,39,41,42,44,45,48,50,51,52,53,54,55,56,60,61,65,66,67,70,88,90,91,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,131,132,134,],[-8,-38,-68,69,-39,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,69,69,102,-66,105,-36,-29,-41,-60,-7,-37,-27,-31,-33,-40,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,102,-34,-35,-30,]),'RBRACKET':([33,35,39,42,44,45,48,50,51,52,53,54,55,56,61,70,88,90,91,96,97,101,103,104,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,134,],[-8,-38,-68,-39,-66,-65,-59,-61,-62,-63,-64,-67,-69,-32,97,-36,-29,-41,-60,-7,-37,-27,-31,-33,-40,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-52,-53,-54,-55,-56,-57,-58,-30,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'all_lines':([0,],[1,]),'functionlist':([0,],[2,]),'main_lines':([0,2,],[3,8,]),'function':([0,2,],[4,9,]),'bigblock':([0,2,7,11,57,99,100,106,136,],[5,5,19,19,93,129,130,133,138,]),'block':([7,],[11,]),'statement':([7,11,],[13,28,]),'assignment':([7,11,],[14,14,]),'print_smt':([7,11,],[15,15,]),'if_statement':([7,11,],[16,16,]),'if_else_statement':([7,11,],[17,17,]),'while_statement':([7,11,],[18,18,]),'call_fun':([7,11,25,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[20,20,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'biglist':([21,25,30,32,34,36,37,38,40,42,46,47,49,58,59,62,63,64,65,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,90,91,92,93,95,102,105,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,133,137,],[31,45,45,45,45,45,45,45,45,70,45,45,45,70,45,70,70,70,70,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,70,70,70,45,70,45,45,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,70,45,70,]),'list':([25,32,34,],[41,60,61,]),'expression':([25,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[42,58,42,42,62,63,64,65,90,91,92,95,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,131,132,137,]),'poundexp':([25,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'bigtuple':([25,30,32,34,36,37,38,40,43,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[44,44,44,44,44,44,44,66,88,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,66,44,44,44,44,]),'factor':([25,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'unary':([25,30,32,34,36,37,38,40,46,47,49,59,69,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,89,93,102,105,133,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'tuple':([40,89,],[67,67,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> all_lines","S'",1,None,None,None),
  ('all_lines -> functionlist main_lines','all_lines',2,'p_all_lines','sbml.py',565),
  ('all_lines -> main_lines','all_lines',1,'p_all_lines2','sbml.py',570),
  ('functionlist -> functionlist function','functionlist',2,'p_function_list','sbml.py',575),
  ('functionlist -> function','functionlist',1,'p_function_list2','sbml.py',580),
  ('function -> FUN VARIABLE LPAREN list RPAREN EQUAL bigblock expression SEMICOLON','function',9,'p_function','sbml.py',585),
  ('function -> FUN VARIABLE EMPTYTUPLE EQUAL bigblock expression SEMICOLON','function',7,'p_function2','sbml.py',590),
  ('call_fun -> VARIABLE LPAREN list RPAREN','call_fun',4,'p_call_function','sbml.py',595),
  ('call_fun -> VARIABLE EMPTYTUPLE','call_fun',2,'p_call_function2','sbml.py',600),
  ('main_lines -> bigblock','main_lines',1,'p_main_lines','sbml.py',608),
  ('bigblock -> LCURLY block RCURLY','bigblock',3,'p_bigblock','sbml.py',613),
  ('bigblock -> LCURLY RCURLY','bigblock',2,'p_bigblock2','sbml.py',618),
  ('block -> block statement','block',2,'p_block','sbml.py',623),
  ('block -> statement','block',1,'p_block2','sbml.py',628),
  ('assignment -> VARIABLE EQUAL expression SEMICOLON','assignment',4,'p_assignment','sbml.py',633),
  ('assignment -> VARIABLE biglist EQUAL expression SEMICOLON','assignment',5,'p_assignment2','sbml.py',638),
  ('if_else_statement -> IF LPAREN expression RPAREN bigblock ELSE bigblock','if_else_statement',7,'p_if_else','sbml.py',643),
  ('if_statement -> IF LPAREN expression RPAREN bigblock','if_statement',5,'p_if_statement','sbml.py',648),
  ('while_statement -> WHILE LPAREN expression RPAREN bigblock','while_statement',5,'p_while_statement','sbml.py',653),
  ('statement -> assignment','statement',1,'p_statement','sbml.py',658),
  ('statement -> print_smt','statement',1,'p_statement','sbml.py',659),
  ('statement -> if_statement','statement',1,'p_statement','sbml.py',660),
  ('statement -> if_else_statement','statement',1,'p_statement','sbml.py',661),
  ('statement -> while_statement','statement',1,'p_statement','sbml.py',662),
  ('statement -> bigblock','statement',1,'p_statement','sbml.py',663),
  ('statement -> call_fun SEMICOLON','statement',2,'p_statement','sbml.py',664),
  ('print_smt -> PRINT LPAREN expression RPAREN SEMICOLON','print_smt',5,'p_print_smt','sbml.py',673),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_parenthesis','sbml.py',678),
  ('poundexp -> POUND expression','poundexp',2,'p_pound','sbml.py',683),
  ('expression -> poundexp bigtuple','expression',2,'p_tupleindex','sbml.py',688),
  ('expression -> poundexp LPAREN expression RPAREN','expression',4,'p_tupleindex2','sbml.py',693),
  ('bigtuple -> LPAREN bigtuple RPAREN','bigtuple',3,'p_tupleParen','sbml.py',698),
  ('bigtuple -> EMPTYTUPLE','bigtuple',1,'p_emptytuple','sbml.py',703),
  ('bigtuple -> LPAREN tuple RPAREN','bigtuple',3,'p_bigtuple','sbml.py',708),
  ('tuple -> expression COMMA expression','tuple',3,'p_tuple','sbml.py',713),
  ('tuple -> tuple COMMA expression','tuple',3,'p_tuple2','sbml.py',718),
  ('expression -> expression biglist','expression',2,'p_brackets','sbml.py',723),
  ('biglist -> LBRACKET list RBRACKET','biglist',3,'p_biglist','sbml.py',728),
  ('biglist -> EMPTYLIST','biglist',1,'p_emptyList','sbml.py',733),
  ('list -> expression','list',1,'p_lists','sbml.py',738),
  ('list -> list COMMA expression','list',3,'p_lists2','sbml.py',743),
  ('expression -> NOT expression','expression',2,'p_notop','sbml.py',748),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','sbml.py',753),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','sbml.py',754),
  ('expression -> expression TIMES expression','expression',3,'p_expression_binop','sbml.py',755),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','sbml.py',756),
  ('expression -> expression EXPONENT expression','expression',3,'p_expression_binop','sbml.py',757),
  ('expression -> expression DIV expression','expression',3,'p_expression_binop','sbml.py',758),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','sbml.py',759),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','sbml.py',760),
  ('expression -> expression LTE expression','expression',3,'p_expression_binop','sbml.py',761),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','sbml.py',762),
  ('expression -> expression GTE expression','expression',3,'p_expression_binop','sbml.py',763),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','sbml.py',764),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','sbml.py',765),
  ('expression -> expression ANDALSO expression','expression',3,'p_expression_binop','sbml.py',766),
  ('expression -> expression ORELSE expression','expression',3,'p_expression_binop','sbml.py',767),
  ('expression -> expression APPEND expression','expression',3,'p_expression_binop','sbml.py',768),
  ('expression -> expression IN expression','expression',3,'p_expression_binop','sbml.py',769),
  ('expression -> factor','expression',1,'p_expression_factor','sbml.py',774),
  ('unary -> MINUS expression','unary',2,'p_unary','sbml.py',778),
  ('factor -> NUMBER','factor',1,'p_factor_number','sbml.py',783),
  ('factor -> STRING','factor',1,'p_factor_number','sbml.py',784),
  ('factor -> TRUE','factor',1,'p_factor_number','sbml.py',785),
  ('factor -> FALSE','factor',1,'p_factor_number','sbml.py',786),
  ('factor -> biglist','factor',1,'p_factor_number','sbml.py',787),
  ('factor -> bigtuple','factor',1,'p_factor_number','sbml.py',788),
  ('factor -> unary','factor',1,'p_factor_number','sbml.py',789),
  ('factor -> VARIABLE','factor',1,'p_factor_number','sbml.py',790),
  ('factor -> call_fun','factor',1,'p_factor_number','sbml.py',791),
]
